<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-23T02:37:55 IST" name="Default suite" finished-at="2022-12-23T02:38:19 IST" duration-ms="24372">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.CucumberRunnerTests@4f80542f]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-12-23T02:37:55 IST" name="Default test" finished-at="2022-12-23T02:38:19 IST" duration-ms="24372">
      <class name="com.runner.CucumberRunnerTests">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.runner.CucumberRunnerTests@4f80542f]" started-at="2022-12-23T02:37:55 IST" name="setUpClass" finished-at="2022-12-23T02:37:55 IST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4cc01c7f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.CucumberRunnerTests@4f80542f]" started-at="2022-12-23T02:37:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-12-23T02:38:16 IST" duration-ms="21021" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify stctv Subscriptions for all countries"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Verify stctv OTT Subscription for all countries"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.core.exception.CucumberException">
            <message>
              <![CDATA[Step [User clicks on country as {string} verifies {string}, {string} and {string} subscription details with currency] is defined with 4 parameters at 'com.definitions.SubscriptionsDetailsDefinitions.verifyPackagesPriceWithCurrency(java.lang.String,java.lang.String,java.lang.String,java.lang.String)'.
However, the gherkin step has 5 arguments:
 * "<country>"
 * "<lite>"
 * "<classic>"
 * "<premium>"
 * Table:
      | country | lite          | classic       | premium       |
      | Bahrain | 2 BHD/month   | 3 BHD/month   | 6 BHD/month   |
      | KSA     | 15 SAR/month  | 25 SAR/month  | 60 SAR/month  |
      | Kuwait  | 1.2 KWD/month | 2.5 KWD/month | 4.8 KWD/month |

Step text: User clicks on country as "<country>" verifies "<lite>", "<classic>" and "<premium>" subscription details with currency]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.core.exception.CucumberException: Step [User clicks on country as {string} verifies {string}, {string} and {string} subscription details with currency] is defined with 4 parameters at 'com.definitions.SubscriptionsDetailsDefinitions.verifyPackagesPriceWithCurrency(java.lang.String,java.lang.String,java.lang.String,java.lang.String)'.
However, the gherkin step has 5 arguments:
 * "<country>"
 * "<lite>"
 * "<classic>"
 * "<premium>"
 * Table:
      | country | lite          | classic       | premium       |
      | Bahrain | 2 BHD/month   | 3 BHD/month   | 6 BHD/month   |
      | KSA     | 15 SAR/month  | 25 SAR/month  | 60 SAR/month  |
      | Kuwait  | 1.2 KWD/month | 2.5 KWD/month | 4.8 KWD/month |

Step text: User clicks on country as "<country>" verifies "<lite>", "<classic>" and "<premium>" subscription details with currency
at io.cucumber.core.runner.PickleStepDefinitionMatch.arityMismatch(PickleStepDefinitionMatch.java:83)
at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:42)
at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:85)
at io.cucumber.core.runner.TestStep.run(TestStep.java:57)
at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
at io.cucumber.core.runner.TestCase.run(TestCase.java:84)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:129)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:129)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.core.exception.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.runner.CucumberRunnerTests@4f80542f]" started-at="2022-12-23T02:38:16 IST" name="tearDownClass" finished-at="2022-12-23T02:38:19 IST" duration-ms="2928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.runner.CucumberRunnerTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
